<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:JetSnailControlLibrary.WPF">

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2"
                                   Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground"
                Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="16 0" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="TextBlock.FontWeight" Value="{DynamicResource Subtitle1.FontWeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="PART_Header"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="Blue" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation BeginTime="0:0:1" Duration="0:0:0"
                                                        To="{StaticResource OverlayOnSurface}"
                                                        Storyboard.TargetName="Bd"
                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" />
                                        <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.25" From="0"
                                                         To="{StaticResource OpacityOnSurface.Pressed}"
                                                         Storyboard.TargetName="Bd"
                                                         Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                         From="0"
                                                         To="1" />
                                        <DoubleAnimation Duration="0:0:0.5"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="Bd" Height="56"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <local:RippleEffectDecorator ColorTheme="OnSurface"/>

                                    <Grid Margin="{TemplateBinding Padding}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="32" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="24" />
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton x:Name="Expander" Grid.Column="0" 
                                                      Style="{StaticResource AngleToggleStyle}"
                                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press" />
                                        <ContentPresenter x:Name="PART_Header" Grid.Column="2" IsHitTestVisible="False"
                                                          ContentSource="Header" 
                                                          HorizontalAlignment="Stretch" />
                                        <TextBlock x:Name="PART_Counter" Grid.Column="4" IsHitTestVisible="False"
                                                   Foreground="{StaticResource OnSurfaceBrush}"
                                                   FontSize="{StaticResource Caption.FontSize}"
                                                   FontWeight="{StaticResource Caption.FontWeight}"
                                                   Text="{Binding ItemsSource.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={local:ZeroToEmptyStringConverter}}"
                                        />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>

                        <StackPanel x:Name="ItemsContainer" Visibility="Collapsed">
                            <ItemsPresenter x:Name="ItemsHost">
                                <ItemsPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="1" />
                                </ItemsPresenter.LayoutTransform>
                            </ItemsPresenter>
                        </StackPanel>

                    </StackPanel>

                    <ControlTemplate.Triggers>
                      <Trigger Property="IsExpanded" Value="true">
                        <Setter Property="Visibility" TargetName="ItemsContainer" Value="Visible" />
                      </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Style.Resources>
            <SolidColorBrush x:Key="TreeView.HoverBackgroundBrush" Color="#E9F5EE" />
        </Style.Resources>

        <!-- attached properties -->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

        <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />

        <Setter Property="FontSize" Value="{StaticResource Subtitle1.FontSize}" />
        
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                      <Grid>
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}"
                                      CanContentScroll="false" Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Visibility="{TemplateBinding local:ControlProperties.IsBusy, Converter={local:BooleanToVisibilityConverter}}">
                          <ItemsPresenter />
                        </ScrollViewer>
                        <Border Grid.ColumnSpan="2" Grid.Row="1"
                                Visibility="{TemplateBinding local:ControlProperties.IsBusy, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                          <TextBlock Style="{StaticResource SpinningAnimation}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                      </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>