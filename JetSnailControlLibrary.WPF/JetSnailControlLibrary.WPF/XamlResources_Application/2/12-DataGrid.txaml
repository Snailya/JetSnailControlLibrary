<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:JetSnailControlLibrary.WPF"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <!-- String Filter View -->

    <Style TargetType="{x:Type local:StringFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:StringFilterView}">
                    <Grid Margin="0 5 0 5">
                        <TextBox x:Name="PART_Input"
                                 Height="Auto"
                                 KeyboardNavigation.DirectionalNavigation="Cycle" Width="Auto"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MultiValue Filter DataTemplate -->

    <DataTemplate x:Key="MultiValueFilterDataTemplate">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox
                VerticalAlignment="Center"
                IsChecked="{Binding IsSelected, Mode=TwoWay, PresentationTraceSources.TraceLevel=High, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock
                    VerticalAlignment="Center"
                    Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </CheckBox>

        </Grid>
    </DataTemplate>

    <Style TargetType="ListBoxItem" x:Key="ListBoxItemContainerStyle">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!-- MultiValue Filter View -->
    <Style TargetType="{x:Type local:MultiValueFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:MultiValueFilterView}">
                    <Grid Margin="0 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ListBox x:Name="PART_ItemsHost" MaxHeight="200" Padding="0"
                                 ItemTemplate="{StaticResource MultiValueFilterDataTemplate}"
                                 ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                                 ItemsSource="{Binding ItemsSource}"
                                 Margin="{TemplateBinding Padding}"
                                 KeyboardNavigation.DirectionalNavigation="Cycle" Width="Auto"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBox x:Name="PART_Input" Grid.Row="2"
                                 Height="Auto" Width="Auto"
                                 Text="{Binding Keyword, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ItemsSource.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- FilterViewHost -->
    <Style TargetType="{x:Type local:FilterViewHost}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FilterViewHost}">
                    <!-- Outer border with the drop shadow margin -->
                    <Border Background="Transparent" Padding="5">
                        <Grid>
                            <!-- border and drop shadow -->
                            <Border Background="{TemplateBinding Background}">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="0.5" />
                                </Border.Effect>
                            </Border>
                            <StackPanel Orientation="Vertical" Margin="10">
                                <ItemsPresenter />
                                <StackPanel Orientation="Horizontal" Margin="0 5 0 5" HorizontalAlignment="Right">
                                    <Button Content="应用" Command="{Binding ApplyFilterCommand}" />
                                    <Rectangle Width="10" />
                                    <Button Content="重置" Command="{Binding ClearCommand}" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- AutoFilterDataGrid Default Thumb Style -->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- AutoFilterDataGrid ColumnHeader Style -->
    <Style x:Key="AutoFilterDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />

        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16 0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Background="{TemplateBinding Background}">
                        <themes:DataGridHeaderBorder x:Name="PART_Border"
                                                     BorderBrush="{TemplateBinding BorderBrush}"
                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                     Background="{TemplateBinding Background}"
                                                     IsClickable="{TemplateBinding CanUserSort}"
                                                     IsPressed="{TemplateBinding IsPressed}"
                                                     IsHovered="{TemplateBinding IsMouseOver}"
                                                     Padding="{TemplateBinding Padding}"
                                                     SortDirection="{TemplateBinding SortDirection}"
                                                     SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition MinWidth="10" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="PART_Header" Grid.Column="0"
                                                  RecognizesAccessKey="True"
                                                  HorizontalAlignment="Left"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <local:AutoFilterDataGridColumnFilter x:Name="PART_ColumnFilter" Grid.Column="2" />
                            </Grid>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext, ElementName=PART_Header}" Value="{x:Null}">
                            <Setter TargetName="PART_ColumnFilter" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridCell Button -->
    <Style x:Key="DataGridCellButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="0" />
    </Style>

    <!-- DataGrid Cell-->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Height"
                Value="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />

        <Setter Property="Background" Value="Transparent" />

        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="16 0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush"
                        Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid Row-->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center">
                        <Run Text="!" />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalContentAlignment="Stretch" />
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin"
                        Value="{Binding NewItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"
                        Value="{Binding Path=(local:ColorProperties.SelectedBackgroundBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid -->
    <Style TargetType="{x:Type local:AutoFilterDataGrid}">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OnSurfaceBrush}" />

        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource OnSurface}" Opacity="0.12" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Border.CornerRadius" Value="0" />

        <Setter Property="SortIndicatorColor" Value="{StaticResource Primary}" />

        <Setter Property="local:ColorProperties.SelectedBackgroundBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Primary}" Opacity="0.12" />
            </Setter.Value>
        </Setter>

        <Setter Property="local:ControlProperties.UseNaturalSort" Value="True" />

        <Setter Property="ColumnHeaderHeight" Value="56" />
        <Setter Property="RowHeight" Value="52" />

        <Setter Property="GridLinesVisibility" Value="None" />

        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />

        <Setter Property="ColumnHeaderStyle" Value="{StaticResource AutoFilterDataGridColumnHeaderStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AutoFilterDataGrid}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" local:ControlProperties.IsBusy="{TemplateBinding local:ControlProperties.IsBusy}" >
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false"
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Visibility="{TemplateBinding local:ControlProperties.IsBusy, Converter={local:BooleanToVisibilityConverter}}"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2" Grid.Row="1" />
                                            <Border Grid.ColumnSpan="2" Grid.Row="1"
                                                    Visibility="{TemplateBinding local:ControlProperties.IsBusy, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                                                <TextBlock Style="{StaticResource SpinningAnimation}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center" />
                                            </Border>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical"
                                                       Grid.Row="1"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition
                                                        Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Orientation="Horizontal"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           ViewportSize="{TemplateBinding ViewportWidth}" />
                                            </Grid>

                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="PART_VerticalScrollBar"
                                                                To="1.0" BeginTime="0:0:0.2"
                                                                Duration="0:0:0.5"
                                                                Storyboard.TargetProperty="Opacity" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="PART_HorizontalScrollBar"
                                                                To="1.0" BeginTime="0:0:0.2" Duration="0:0:0.5"
                                                                Storyboard.TargetProperty="Opacity" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="PART_VerticalScrollBar"
                                                                To="0.0" BeginTime="0:0:2" Duration="0:0:0.5"
                                                                Storyboard.TargetProperty="Opacity" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="PART_HorizontalScrollBar"
                                                                To="0.0" BeginTime="0:0:2" Duration="0:0:0.5"
                                                                Storyboard.TargetProperty="Opacity" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="false" />
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <Popup x:Name="DG_Popup"
                               IsHitTestVisible="False" AllowsTransparency="True" 
                               PlacementTarget="{Binding ElementName=DG_ScrollViewer}"
                               Placement="RelativePoint">
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>